{"mappings":"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","sources":["src/index.tsx","src/app.tsx"],"sourcesContent":["export {default as ReactTicker} from './app'\n","\n//@ts-check\n//react-cool-ticker by Ian Macharia\nimport React, {useState, useEffect} from 'react';\n\ntype Size = 'tiny' | 'small' | 'medium' | 'large' | 'massive' | 'hero' | 'gigantic'\ntype TickerBlobStyle = {name: 'blob'}\ntype TickerGradientStyle = {name: 'gradient', gradient: string}\ntype TickerImageStyle = {name: 'image', src: string}\ntype TickerPopStyle = {name: 'pop'}\ntype TickerStyle =\n    | TickerBlobStyle\n    | TickerGradientStyle\n    | TickerImageStyle\n    | TickerPopStyle\n\n//cubic-bezier(.95,.05,.8,.04) - suspense\n//cubic-bezier(.68,-0.55,.27,1.55) - bounce\n//cubic-bezier(.18,.89,.32,1.28) - overshoot\n//cubic-bezier(1,0,0,1) - fast\n\ninterface IProps {\n    autoplay?: boolean,\n    staticText: string | number,\n    movingText: string[] | number[],\n    size: Size,\n    tickerStyle?: TickerStyle,\n    interval: number,\n}\n\nconst sizeMap: Record<Size, [string, string]> = {\n    tiny: ['text-xs', '1.6rem'],\n    small: ['text-sm', '2.0rem'],\n    medium: ['text-base', '2.4rem'],\n    large: ['text-lg', '2.4rem'],\n    massive: ['text-3xl', '3.2rem'],\n    hero: ['text-4xl', '3.6rem'],\n    gigantic: ['text-7xl', '4.8rem'],\n}\n\nconst generateTickerStyle = (style: TickerStyle) => {\n    switch (style.name) {\n        case 'gradient':\n            return {\n                background: style.gradient,\n                backgroundClip: 'text',\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent'\n            }\n        case 'image':\n            return {\n                background: `url(${style.src})`,\n                backgroundRepeat: 'no-repeat',\n                backgroundSize: 'cover',\n                backgroundClip: 'text',\n                backgroundPosition: 'center',\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent'\n            }\n        default:\n            return {}\n    }\n}\n\nconst Ticker = (props: IProps) => {\n    const [tickerIndex, setTickerIndex] = useState(0)\n    const [tickerTranslate, setTickerTranslate] = useState(0)\n    let interval: number | null = null\n    useEffect(() => {\n        if (props.autoplay !== false) {\n            interval = setInterval(() => {\n                if (tickerIndex >= props.movingText.length) {\n                    setTickerTranslate(0)\n                    setTickerIndex(0)\n                } else {\n                    setTickerIndex(tickerIndex + 1)\n                    setTickerTranslate(tickerIndex * 100 / props.movingText.length)\n                }\n            }, props.interval)\n        }\n        return (() => {interval && clearInterval(interval)})\n    }, [props.interval, tickerIndex, tickerTranslate, props.autoplay])\n\n    return (\n        <div \n            className=\"flex justify-center cursor-pointer top md:block\">\n            <div className=\"flex\">\n                <span\n                    style={{maxHeight: sizeMap[props.size][1]}}\n                    className={`relative inline-flex px-3 pl-6 mr-0 text-gray-800 overflow-hidden\n                    ${sizeMap[props.size][0] || 'text-sm'}   \n                        outline-none whitespace-nowrap font-body focus:shadow-outline`}>\n                    <div className=\"pt-1\" style={{height: '100%'}}>\n                        {props.staticText}\n                    </div>\n                    <div\n                        style={{height: `calc(100% * ${props.movingText.length})`}}\n                        className={`relative flex flex-col px-1 ${props.size.match(/hero|gigantic/gi) ? 'pl-4' : 'pl-1'} text-left transform`}>\n                        <div style={{transform: `translateY(-${tickerTranslate}%)`}}\n                            className={`select-none overflow-hidden flex flex-col transition-all duration-500 ease-in-out`}>\n                            {props.movingText.map(text => {\n                                return (\n                                    <React.Fragment>\n                                        <strong\n                                            key={text}\n                                            className={`${sizeMap[props.size][0] || 'text-sm'} \n                                        ${props.tickerStyle?.name === 'blob' ? 'rc_text overflow-hidden' : ''} \n                                        py-1 flex items-center whitespace-nowrap`}\n                                            style={{\n                                                textOverflow: 'ellipsis',\n                                                ...(props?.tickerStyle?.name ? generateTickerStyle(props.tickerStyle) : {})\n                                            }}>\n                                            {text}\n                                            {props.tickerStyle?.name === 'blob' ?\n                                                <>\n                                                    <div className=\"rc_blob1\"></div>\n                                                    <div className=\"rc_blob2\"></div>\n                                                    <div className=\"rc_blob3\"></div>\n                                                </> : null}\n                                        </strong>\n\n                                    </React.Fragment>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </span>\n                          </div>\n        </div>\n    )\n}\n\nexport default Ticker\n"],"names":[],"version":3,"file":"index.js.map"}